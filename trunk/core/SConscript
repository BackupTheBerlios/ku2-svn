#
#	SConstruct file for Kane Utilities 2 (core)
#		J. Anton, Copyright 2006+
#

import os
Import("ku2")
env = ku2.Fork()
env.Append(CPPPATH = ["."])

###
#	Kane Utilities 2 sources and includes
###
env.AddSources(Split("""
	ku2/ku2.c
	
	ds/stack/stack.c
	ds/arrseq/arrseq.c
	ds/graph/graph.c
	ds/graph/adjmatrix.c
	ds/abtree/abtree.c
	ds/list/dl_list.c
	ds/matrix/int_matrix.c
	
	dp/resmanager/res.c
	dp/var/var.c
	dp/var/vspace.c
	dp/var/vlist.c
	
	other/other.c
	io/cfgreader/cfg.c
	io/log/log.c
	"""))

env.AddIncludes(Split("""
	ku2/ku2info.h
	ku2/host.h
	ku2/debug.h
	ku2/memory.h
	ku2/gettext.h
	ku2/directives.h
	ku2/ecode.h
	ku2/types.h
	
	ds/stack/stack.h
	ds/arrseq/arrseq.h
	ds/graph/graph.h
	ds/abtree/abtree.h
	ds/list/list.h
	ds/matrix/matrix.h
	
	dp/resmanager/res.h
	dp/var/vlist.h
	dp/var/var.h
	dp/var/vspace.h
	other/other.h
	io/cfgreader/cfg.h
	io/log/log.h
	"""))

###
#	Building and Installing
###
ku2lib = env.Ku2SharedLibrary("ku2")
Default(ku2lib)

ku2.RegisterComponent("ku2core", ku2lib, stealth = True)
ku2.RegisterComponent("core", deps = ["ku2core"])
ku2.RegisterLibrary("ku2core",
                    libs = [str(ku2lib[0])],
                    libpath = [os.getcwd()],
                    deps = ["ku2core-includes"])
ku2.RegisterLibrary("ku2core-includes", includes = [os.getcwd()])

#env.Alias("install", install_root+install_prefix)
#env.Install(install_root+install_prefix+"/lib/", ku2lib)
#env.Install(install_root+install_prefix+"/lib/pkgconfig/", File("ku2.pc"))
#for c_inc in includes:
#	c_inc_f = File(c_inc)
#	env.Install(install_root+install_prefix+"/include/ku2/core/"+os.path.dirname(c_inc_f.path), c_inc_f)
